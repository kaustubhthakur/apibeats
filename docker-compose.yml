version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: heartbeat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - heartbeat-network

  manager:
    build:
      context: .
      dockerfile: Dockerfile.manager
    container_name: heartbeat-manager
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - heartbeat-network

  worker1:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: heartbeat-worker1
    ports:
      - "8001:8001"
    depends_on:
      manager:
        condition: service_healthy
    environment:
      - WORKER_NAME=worker1
      - WORKER_PORT=8001
      - MANAGER_HOST=manager
      - MANAGER_PORT=8000
      - HEARTBEAT_INTERVAL=10
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - heartbeat-network

  worker2:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: heartbeat-worker2
    ports:
      - "8002:8002"
    depends_on:
      manager:
        condition: service_healthy
    environment:
      - WORKER_NAME=worker2
      - WORKER_PORT=8002
      - MANAGER_HOST=manager
      - MANAGER_PORT=8000
      - HEARTBEAT_INTERVAL=15
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - heartbeat-network

  worker3:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: heartbeat-worker3
    ports:
      - "8003:8003"
    depends_on:
      manager:
        condition: service_healthy
    environment:
      - WORKER_NAME=worker3
      - WORKER_PORT=8003
      - MANAGER_HOST=manager
      - MANAGER_PORT=8000
      - HEARTBEAT_INTERVAL=12
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - heartbeat-network

  # Test container to debug WebSocket connections
  test:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: heartbeat-test
    depends_on:
      manager:
        condition: service_healthy
    environment:
      - MANAGER_HOST=manager
      - MANAGER_PORT=8000
    volumes:
      - ./test_websocket.py:/app/test_websocket.py
    command: python test_websocket.py
    networks:
      - heartbeat-network
    profiles:
      - test

volumes:
  redis_data:
    driver: local

networks:
  heartbeat-network:
    driver: bridge